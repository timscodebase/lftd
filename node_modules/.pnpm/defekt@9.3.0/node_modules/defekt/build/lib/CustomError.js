"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomError = void 0;
class CustomError extends Error {
    constructor({ code, message, cause, data }) {
        super(message);
        this.code = code;
        this.cause = cause;
        this.data = data;
    }
    // eslint-disable-next-line @typescript-eslint/naming-convention
    toJSON() {
        const serializableObject = {
            name: this.name,
            message: this.message,
            code: this.code,
            stack: this.stack
        };
        try {
            JSON.stringify(this.data);
            serializableObject.data = this.data;
        }
        catch {
            // If data is not serializable, we want to omit it from the returned object.
        }
        try {
            JSON.stringify(this.cause);
            serializableObject.cause = this.cause;
        }
        catch {
            // If data is not serializable, we want to omit it from the returned object.
        }
        return serializableObject;
    }
}
exports.CustomError = CustomError;
