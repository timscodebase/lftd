{"version":3,"file":"types.js","names":[],"sources":["../../../../src/plugins/pipeline/types.ts"],"sourcesContent":["import type {\n    MaybePromise,\n    RxCollection,\n    RxDocument\n} from '../../types';\n\n\nexport type RxPipelineHandler<RxDocType> = (\n    docs: RxDocument<RxDocType>[]\n) => MaybePromise<any>;\n\nexport type RxPipelineOptions<RxDocType> = {\n    /**\n     * The identifier of the pipeline. Used when\n     * metadata of the pipeline is stored. Changing the identifier.\n     */\n    identifier: string;\n    destination: RxCollection<any>;\n    handler: RxPipelineHandler<RxDocType>;\n    waitForLeadership?: boolean;\n    batchSize?: number;\n}\n\n\nexport type CheckpointDocData<CheckpointType = any> = {\n    checkpoint: CheckpointType;\n    lastDocTime: number;\n};\n"],"mappings":"","ignoreList":[]}