{"version":3,"file":"rx-document.js","names":["distinctUntilChanged","filter","map","shareReplay","startWith","clone","trimDots","pluginMissing","flatClone","PROMISE_RESOLVE_NULL","RXJS_SHARE_REPLAY_DEFAULTS","getProperty","getFromMapOrCreate","newRxError","runPluginHooks","getDocumentDataOfRxChangeEvent","overwritable","getSchemaByObjectPath","getWrittenDocumentsFromBulkWriteResponse","throwIfIsStorageWriteError","modifierFromPublicToInternal","basePrototype","primaryPath","_this","isInstanceOfRxDocument","undefined","collection","schema","primary","_data","revision","_rev","deleted$","$","pipe","d","_deleted","deleted$$","reactivity","database","getReactivityFactory","fromObservable","getLatest","deleted","latestDocData","_docCache","getLatestDocumentData","getCachedRxDocument","changeEvent","isLocal","documentId","prev","curr","docData","$$","get$","path","isDevMode","includes","finalFields","schemaObj","jsonSchema","data","get$$","obs","get","populate","value","ref","refCollection","collections","type","findByIds","exec","then","res","valuesIterator","values","Array","from","findOne","objPath","_propertyCache","valueObj","isArray","deepFreezeWhenDevMode","proxy","Proxy","target","property","lastChar","charAt","length","endsWith","key","slice","toJSON","withMetaFields","_attachments","_meta","toMutableJSON","update","_updateObj","incrementalUpdate","updateCRDT","putAttachment","getAttachment","allAttachments","allAttachments$","modify","mutationFunction","_context","oldData","newData","_saveData","incrementalModify","incrementalWriteQueue","addWrite","result","patch","Object","entries","forEach","k","v","incrementalPatch","id","document","beforeDocumentUpdateWrite","writeRows","previous","writeResult","storageInstance","bulkWrite","isError","error","_runHooks","remove","Promise","reject","deletedData","removedDocData","removed","incrementalRemove","newDoc","destroy","createRxDocumentConstructor","proto","constructor","RxDocumentConstructor","Map","prototype","createWithConstructor","jsonData","doc","isRxDocument","obj","assign","validateChange"],"sources":["../../src/rx-document.ts"],"sourcesContent":["import {\n    Observable\n} from 'rxjs';\nimport {\n    distinctUntilChanged,\n    filter,\n    map,\n    shareReplay,\n    startWith\n} from 'rxjs/operators';\nimport {\n    clone,\n    trimDots,\n    pluginMissing,\n    flatClone,\n    PROMISE_RESOLVE_NULL,\n    RXJS_SHARE_REPLAY_DEFAULTS,\n    getProperty,\n    getFromMapOrCreate\n} from './plugins/utils/index.ts';\nimport {\n    newRxError\n} from './rx-error.ts';\nimport {\n    runPluginHooks\n} from './hooks.ts';\n\nimport type {\n    RxDocument,\n    RxCollection,\n    RxDocumentData,\n    RxDocumentWriteData,\n    UpdateQuery,\n    CRDTEntry,\n    ModifyFunction\n} from './types/index.d.ts';\nimport { getDocumentDataOfRxChangeEvent } from './rx-change-event.ts';\nimport { overwritable } from './overwritable.ts';\nimport { getSchemaByObjectPath } from './rx-schema-helper.ts';\nimport { getWrittenDocumentsFromBulkWriteResponse, throwIfIsStorageWriteError } from './rx-storage-helper.ts';\nimport { modifierFromPublicToInternal } from './incremental-write.ts';\n\nexport const basePrototype = {\n    get primaryPath() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this.collection.schema.primaryPath;\n    },\n    get primary() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return (_this._data as any)[_this.primaryPath];\n    },\n    get revision() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this._data._rev;\n    },\n    get deleted$() {\n        const _this: RxDocument<any> = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this.$.pipe(\n            map((d: any) => d._data._deleted)\n        );\n    },\n    get deleted$$() {\n        const _this: RxDocument = this as any;\n        const reactivity = _this.collection.database.getReactivityFactory();\n        return reactivity.fromObservable(\n            _this.deleted$,\n            _this.getLatest().deleted,\n            _this.collection.database\n        );\n    },\n    get deleted() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this._data._deleted;\n    },\n\n    getLatest(this: RxDocument): RxDocument {\n        const latestDocData = this.collection._docCache.getLatestDocumentData(this.primary);\n        return this.collection._docCache.getCachedRxDocument(latestDocData);\n    },\n\n    /**\n     * returns the observable which emits the plain-data of this document\n     */\n    get $(): Observable<RxDocumentData<any>> {\n        const _this: RxDocument<{}, {}, {}> = this as any;\n        return _this.collection.$.pipe(\n            filter(changeEvent => !changeEvent.isLocal),\n            filter(changeEvent => changeEvent.documentId === this.primary),\n            map(changeEvent => getDocumentDataOfRxChangeEvent(changeEvent)),\n            startWith(_this.collection._docCache.getLatestDocumentData(this.primary)),\n            distinctUntilChanged((prev, curr) => prev._rev === curr._rev),\n            map(docData => (this as RxDocument<any>).collection._docCache.getCachedRxDocument(docData)),\n            shareReplay(RXJS_SHARE_REPLAY_DEFAULTS)\n        );\n    },\n    get $$(): any {\n        const _this: RxDocument = this as any;\n        const reactivity = _this.collection.database.getReactivityFactory();\n        return reactivity.fromObservable(\n            _this.$,\n            _this.getLatest()._data,\n            _this.collection.database\n        );\n    },\n\n    /**\n     * returns observable of the value of the given path\n     */\n    get$(this: RxDocument, path: string): Observable<any> {\n        if (overwritable.isDevMode()) {\n            if (path.includes('.item.')) {\n                throw newRxError('DOC1', {\n                    path\n                });\n            }\n\n            if (path === this.primaryPath) {\n                throw newRxError('DOC2');\n            }\n\n            // final fields cannot be modified and so also not observed\n            if (this.collection.schema.finalFields.includes(path)) {\n                throw newRxError('DOC3', {\n                    path\n                });\n            }\n\n            const schemaObj = getSchemaByObjectPath(\n                this.collection.schema.jsonSchema,\n                path\n            );\n\n            if (!schemaObj) {\n                throw newRxError('DOC4', {\n                    path\n                });\n            }\n        }\n\n        return this.$\n            .pipe(\n                map(data => getProperty(data, path)),\n                distinctUntilChanged()\n            );\n    },\n    get$$(this: RxDocument, path: string) {\n        const obs = this.get$(path);\n        const reactivity = this.collection.database.getReactivityFactory();\n        return reactivity.fromObservable(\n            obs,\n            this.getLatest().get(path),\n            this.collection.database\n        );\n    },\n\n    /**\n     * populate the given path\n     */\n    populate(this: RxDocument, path: string): Promise<RxDocument | null> {\n        const schemaObj = getSchemaByObjectPath(\n            this.collection.schema.jsonSchema,\n            path\n        );\n        const value = this.get(path);\n        if (!value) {\n            return PROMISE_RESOLVE_NULL;\n        }\n        if (!schemaObj) {\n            throw newRxError('DOC5', {\n                path\n            });\n        }\n        if (!schemaObj.ref) {\n            throw newRxError('DOC6', {\n                path,\n                schemaObj\n            });\n        }\n\n        const refCollection: RxCollection = this.collection.database.collections[schemaObj.ref];\n        if (!refCollection) {\n            throw newRxError('DOC7', {\n                ref: schemaObj.ref,\n                path,\n                schemaObj\n            });\n        }\n\n        if (schemaObj.type === 'array') {\n            return refCollection.findByIds(value).exec().then(res => {\n                const valuesIterator = res.values();\n                return Array.from(valuesIterator) as any;\n            });\n        } else {\n            return refCollection.findOne(value).exec();\n        }\n    },\n    /**\n     * get data by objectPath\n     * @hotPath Performance here is really important,\n     * run some tests before changing anything.\n     */\n    get(this: RxDocument, objPath: string): any | null {\n        return getFromMapOrCreate(\n            this._propertyCache,\n            objPath,\n            () => {\n                const valueObj = getProperty(this._data, objPath);\n\n                // direct return if array or non-object\n                if (\n                    typeof valueObj !== 'object' ||\n                    valueObj === null ||\n                    Array.isArray(valueObj)\n                ) {\n                    return overwritable.deepFreezeWhenDevMode(valueObj);\n                }\n                const _this = this;\n                const proxy = new Proxy(\n                    /**\n                     * In dev-mode, the _data is deep-frozen\n                     * so we have to flat clone here so that\n                     * the proxy can work.\n                     */\n                    flatClone(valueObj),\n                    {\n                        get(target, property: any) {\n                            if (typeof property !== 'string') {\n                                return target[property];\n                            }\n                            const lastChar = property.charAt(property.length - 1);\n                            if (property.endsWith('$$')) {\n                                const key = property.slice(0, -2);\n                                return _this.get$$(trimDots(objPath + '.' + key));\n                            } else if (lastChar === '$') {\n                                const key = property.slice(0, -1);\n                                return _this.get$(trimDots(objPath + '.' + key));\n                            } else if (lastChar === '_') {\n                                const key = property.slice(0, -1);\n                                return _this.populate(trimDots(objPath + '.' + key));\n                            } else {\n                                return _this.get(trimDots(objPath + '.' + property));\n                            }\n                        }\n                    });\n                return proxy;\n            }\n        );\n\n    },\n\n    toJSON(this: RxDocument, withMetaFields = false) {\n        if (!withMetaFields) {\n            const data = flatClone(this._data);\n            delete (data as any)._rev;\n            delete (data as any)._attachments;\n            delete (data as any)._deleted;\n            delete (data as any)._meta;\n            return overwritable.deepFreezeWhenDevMode(data);\n        } else {\n            return overwritable.deepFreezeWhenDevMode(this._data);\n        }\n    },\n    toMutableJSON(this: RxDocument, withMetaFields = false) {\n        return clone(this.toJSON(withMetaFields as any));\n    },\n\n    /**\n     * updates document\n     * @overwritten by plugin (optional)\n     * @param updateObj mongodb-like syntax\n     */\n    update(_updateObj: UpdateQuery<any>) {\n        throw pluginMissing('update');\n    },\n    incrementalUpdate(_updateObj: UpdateQuery<any>) {\n        throw pluginMissing('update');\n    },\n    updateCRDT(_updateObj: CRDTEntry<any> | CRDTEntry<any>[]) {\n        throw pluginMissing('crdt');\n    },\n    putAttachment() {\n        throw pluginMissing('attachments');\n    },\n    getAttachment() {\n        throw pluginMissing('attachments');\n    },\n    allAttachments() {\n        throw pluginMissing('attachments');\n    },\n    get allAttachments$() {\n        throw pluginMissing('attachments');\n    },\n\n    async modify<RxDocType>(\n        this: RxDocument<RxDocType>,\n        mutationFunction: ModifyFunction<RxDocType>,\n        // used by some plugins that wrap the method\n        _context?: string\n    ): Promise<RxDocument> {\n        const oldData = this._data;\n        const newData: RxDocumentData<RxDocType> = await modifierFromPublicToInternal<RxDocType>(mutationFunction)(oldData) as any;\n        return this._saveData(newData, oldData) as any;\n    },\n\n    /**\n     * runs an incremental update over the document\n     * @param function that takes the document-data and returns a new data-object\n     */\n    incrementalModify(\n        this: RxDocument,\n        mutationFunction: ModifyFunction<any>,\n        // used by some plugins that wrap the method\n        _context?: string\n    ): Promise<RxDocument> {\n        return this.collection.incrementalWriteQueue.addWrite(\n            this._data,\n            modifierFromPublicToInternal(mutationFunction)\n        ).then(result => this.collection._docCache.getCachedRxDocument(result));\n    },\n\n    patch<RxDocType>(\n        this: RxDocument<RxDocType>,\n        patch: Partial<RxDocType>\n    ) {\n        const oldData = this._data;\n        const newData = clone(oldData);\n        Object\n            .entries(patch)\n            .forEach(([k, v]) => {\n                (newData as any)[k] = v;\n            });\n        return this._saveData(newData, oldData);\n    },\n\n    /**\n     * patches the given properties\n     */\n    incrementalPatch<RxDocumentType = any>(\n        this: RxDocument<RxDocumentType>,\n        patch: Partial<RxDocumentType>\n    ): Promise<RxDocument<RxDocumentType>> {\n        return this.incrementalModify((docData) => {\n            Object\n                .entries(patch)\n                .forEach(([k, v]) => {\n                    (docData as any)[k] = v;\n                });\n            return docData;\n        });\n    },\n\n    /**\n     * saves the new document-data\n     * and handles the events\n     */\n    async _saveData<RxDocType>(\n        this: RxDocument<RxDocType>,\n        newData: RxDocumentWriteData<RxDocType>,\n        oldData: RxDocumentData<RxDocType>\n    ): Promise<RxDocument<RxDocType>> {\n        newData = flatClone(newData);\n\n        // deleted documents cannot be changed\n        if (this._data._deleted) {\n            throw newRxError('DOC11', {\n                id: this.primary,\n                document: this\n            });\n        }\n        await beforeDocumentUpdateWrite(this.collection, newData, oldData);\n        const writeRows = [{\n            previous: oldData,\n            document: newData\n        }];\n        const writeResult = await this.collection.storageInstance.bulkWrite(writeRows, 'rx-document-save-data');\n\n        const isError = writeResult.error[0];\n        throwIfIsStorageWriteError(this.collection, this.primary, newData, isError);\n\n        await this.collection._runHooks('post', 'save', newData, this);\n        return this.collection._docCache.getCachedRxDocument(\n            getWrittenDocumentsFromBulkWriteResponse(\n                this.collection.schema.primaryPath,\n                writeRows,\n                writeResult\n            )[0]\n        );\n    },\n\n    /**\n     * Remove the document.\n     * Notice that there is no hard delete,\n     * instead deleted documents get flagged with _deleted=true.\n     */\n    remove(this: RxDocument): Promise<RxDocument> {\n        const collection = this.collection;\n        if (this.deleted) {\n            return Promise.reject(newRxError('DOC13', {\n                document: this,\n                id: this.primary\n            }));\n        }\n\n        const deletedData = flatClone(this._data);\n        let removedDocData: RxDocumentData<any>;\n        return collection._runHooks('pre', 'remove', deletedData, this)\n            .then(async () => {\n                deletedData._deleted = true;\n                const writeRows = [{\n                    previous: this._data,\n                    document: deletedData\n                }];\n                const writeResult = await collection.storageInstance.bulkWrite(writeRows, 'rx-document-remove');\n                const isError = writeResult.error[0];\n                throwIfIsStorageWriteError(collection, this.primary, deletedData, isError);\n                return getWrittenDocumentsFromBulkWriteResponse(\n                    this.collection.schema.primaryPath,\n                    writeRows,\n                    writeResult\n                )[0];\n            })\n            .then((removed) => {\n                removedDocData = removed;\n                return this.collection._runHooks('post', 'remove', deletedData, this);\n            })\n            .then(() => {\n                return this.collection._docCache.getCachedRxDocument(removedDocData);\n            });\n    },\n    incrementalRemove(this: RxDocument): Promise<RxDocument> {\n        return this.incrementalModify(async (docData) => {\n            await this.collection._runHooks('pre', 'remove', docData, this);\n            docData._deleted = true;\n            return docData;\n        }).then(async (newDoc) => {\n            await this.collection._runHooks('post', 'remove', newDoc._data, newDoc);\n            return newDoc;\n        });\n    },\n    destroy() {\n        throw newRxError('DOC14');\n    }\n};\n\nexport function createRxDocumentConstructor(proto = basePrototype) {\n    const constructor = function RxDocumentConstructor(\n        this: RxDocument,\n        collection: RxCollection,\n        docData: RxDocumentData<any>\n    ) {\n        this.collection = collection;\n\n        // assume that this is always equal to the doc-data in the database\n        this._data = docData;\n        this._propertyCache = new Map<string, any>();\n\n        /**\n         * because of the prototype-merge,\n         * we can not use the native instanceof operator\n         */\n        this.isInstanceOfRxDocument = true;\n    };\n    constructor.prototype = proto;\n    return constructor;\n}\n\nexport function createWithConstructor<RxDocType>(\n    constructor: any,\n    collection: RxCollection<RxDocType>,\n    jsonData: RxDocumentData<RxDocType>\n): RxDocument<RxDocType> | null {\n    const doc = new constructor(collection, jsonData);\n    runPluginHooks('createRxDocument', doc);\n    return doc;\n}\n\nexport function isRxDocument(obj: any): boolean {\n    return typeof obj === 'object' && obj !== null && 'isInstanceOfRxDocument' in obj;\n}\n\n\nexport function beforeDocumentUpdateWrite<RxDocType>(\n    collection: RxCollection<RxDocType>,\n    newData: RxDocumentWriteData<RxDocType>,\n    oldData: RxDocumentData<RxDocType>\n): Promise<any> {\n    /**\n     * Meta values must always be merged\n     * instead of overwritten.\n     * This ensures that different plugins do not overwrite\n     * each others meta properties.\n     */\n    newData._meta = Object.assign(\n        {},\n        oldData._meta,\n        newData._meta\n    );\n\n    // ensure modifications are ok\n    if (overwritable.isDevMode()) {\n        collection.schema.validateChange(oldData, newData);\n    }\n    return collection._runHooks('pre', 'save', newData, oldData);\n}\n\n"],"mappings":"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","ignoreList":[]}