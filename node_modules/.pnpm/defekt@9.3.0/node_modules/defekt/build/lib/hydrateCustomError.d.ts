import { CustomError } from './CustomError';
import { CustomErrorConstructor } from './CustomErrorConstructor';
import { Result } from './Result';
declare const HydratingErrorFailed_base: CustomErrorConstructor<any, "HydratingErrorFailed">;
declare class HydratingErrorFailed extends HydratingErrorFailed_base {
}
declare const hydrateCustomError: <TPotentialCustomErrorNames extends string = string>({ rawEx, potentialErrorConstructors }: {
    rawEx: any;
    potentialErrorConstructors: CustomErrorConstructor<TPotentialCustomErrorNames, string>[];
}) => Result<CustomError<TPotentialCustomErrorNames, string>, HydratingErrorFailed>;
export { HydratingErrorFailed, hydrateCustomError };
