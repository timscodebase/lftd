{"version":3,"file":"rx-query-single-result.js","names":["mapDocumentsDataToCacheDocs","now","overwriteGetterForCaching","newRxError","RxQuerySingleResult","query","docsDataFromStorageInstance","count","time","documents","collection","_docCache","_proto","prototype","getValue","throwIfMissing","op","doc","length","name","mangoQuery","docsMap","slice","_createClass","key","get","map","d","_data","Map","forEach","set","primary","i"],"sources":["../../src/rx-query-single-result.ts"],"sourcesContent":["import { mapDocumentsDataToCacheDocs } from './doc-cache.ts';\nimport { now, overwriteGetterForCaching } from './plugins/utils/index.ts';\nimport { newRxError } from './rx-error.ts';\nimport { RxQueryBase } from './rx-query.ts';\nimport type {\n    RxDocument,\n    RxDocumentData\n} from './types';\n\n/**\n * RxDB needs the query results in multiple formats.\n * Sometimes as a Map or an array with only the documentData.\n * For better performance we work with this class\n * that initializes stuff lazily so that\n * we can directly work with the query results after RxQuery.exec()\n */\nexport class RxQuerySingleResult<RxDocType> {\n    /**\n     * Time at which the current _result state was created.\n     * Used to determine if the result set has changed since X\n     * so that we do not emit the same result multiple times on subscription.\n     */\n    public readonly time = now();\n    public readonly documents: RxDocument<RxDocType>[];\n    constructor(\n        public readonly query: RxQueryBase<RxDocType, unknown>,\n        // only used internally, do not use outside, use this.docsData instead\n        docsDataFromStorageInstance: RxDocumentData<RxDocType>[],\n        // can be overwritten for count-queries\n        public readonly count: number,\n    ) {\n        this.documents = mapDocumentsDataToCacheDocs<RxDocType, any>(this.query.collection._docCache, docsDataFromStorageInstance);\n    }\n\n\n    /**\n     * Instead of using the newResultData in the result cache,\n     * we directly use the objects that are stored in the RxDocument\n     * to ensure we do not store the same data twice and fill up the memory.\n     * @overwrites itself with the actual value\n     */\n    get docsData(): RxDocumentData<RxDocType>[] {\n        return overwriteGetterForCaching(\n            this,\n            'docsData',\n            this.documents.map(d => d._data)\n        );\n    }\n\n\n    // A key->document map, used in the event reduce optimization.\n    get docsDataMap(): Map<string, RxDocumentData<RxDocType>> {\n        const map = new Map<string, RxDocumentData<RxDocType>>();\n        this.documents.forEach(d => {\n            map.set(d.primary, d._data);\n        });\n        return overwriteGetterForCaching(\n            this,\n            'docsDataMap',\n            map\n        );\n    }\n\n    get docsMap(): Map<string, RxDocument<RxDocType>> {\n        const map = new Map<string, RxDocument<RxDocType>>();\n        const documents = this.documents;\n        for (let i = 0; i < documents.length; i++) {\n            const doc = documents[i];\n            map.set(doc.primary, doc);\n        }\n        return overwriteGetterForCaching(\n            this,\n            'docsMap',\n            map\n        );\n    }\n\n    getValue(throwIfMissing?: boolean) {\n        const op = this.query.op;\n        if (op === 'count') {\n            return this.count;\n        } else if (op === 'findOne') {\n            // findOne()-queries emit RxDocument or null\n            const doc = this.documents.length === 0 ? null : this.documents[0];\n            if (!doc && throwIfMissing) {\n                throw newRxError('QU10', {\n                    collection: this.query.collection.name,\n                    query: this.query.mangoQuery,\n                    op\n                });\n            } else {\n                return doc;\n            }\n        } else if (op === 'findByIds') {\n            return this.docsMap;\n        } else {\n            // find()-queries emit RxDocument[]\n            // Flat copy the array so it won't matter if the user modifies it.\n            return this.documents.slice(0);\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]}