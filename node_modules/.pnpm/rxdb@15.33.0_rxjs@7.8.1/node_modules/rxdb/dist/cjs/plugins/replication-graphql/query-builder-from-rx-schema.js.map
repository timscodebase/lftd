{"version":3,"file":"query-builder-from-rx-schema.js","names":["_graphqlSchemaFromRxSchema","require","_index","pullQueryBuilderFromRxSchema","collectionName","input","fillUpOptionals","schema","prefixes","ucCollectionName","ucfirst","queryName","pull","operationName","outputFields","generateGQLOutputFields","ignoreOutputKeys","checkpointInputName","checkpoint","builder","limit","query","SPACING","checkpointFields","join","variables","pullStreamBuilderFromRxSchema","stream","headersName","headers","ensureNotFalsy","pushQueryBuilderFromRxSchema","push","variableName","pushRow","returnFields","spaceCount","pushRows","sendRows","transformPushDoc","doc","sendDoc","Object","entries","forEach","k","v","ignoreInputKeys","includes","properties","newRow","newDocumentState","assumedMasterState","undefined","options","depth","NESTED_SPACING","repeat","LINE_SPACING","key","value","type"],"sources":["../../../../src/plugins/replication-graphql/query-builder-from-rx-schema.ts"],"sourcesContent":["import {\n    GraphQLSchemaFromRxSchemaInputSingleCollection,\n    fillUpOptionals,\n    Prefixes,\n    SPACING\n} from './graphql-schema-from-rx-schema.ts';\nimport { ensureNotFalsy, ucfirst } from '../../plugins/utils/index.ts';\nimport type {\n    RxGraphQLReplicationPullQueryBuilder,\n    RxGraphQLReplicationPullStreamQueryBuilder,\n    RxGraphQLReplicationPushQueryBuilder,\n    RxJsonSchema,\n    TopLevelProperty,\n    WithDeleted\n} from '../../types/index.d.ts';\n\nexport function pullQueryBuilderFromRxSchema(\n    collectionName: string,\n    input: GraphQLSchemaFromRxSchemaInputSingleCollection,\n): RxGraphQLReplicationPullQueryBuilder<any> {\n    input = fillUpOptionals(input);\n    const schema = input.schema\n    const prefixes: Prefixes = input.prefixes as any;\n\n    const ucCollectionName = ucfirst(collectionName);\n    const queryName = prefixes.pull + ucCollectionName;\n    const operationName = ucfirst(queryName);\n\n    const outputFields = generateGQLOutputFields({ schema, ignoreOutputKeys: input.ignoreOutputKeys })\n    // outputFields.push(input.deletedField);    \n    \n    const checkpointInputName = ucCollectionName + 'Input' + prefixes.checkpoint;\n    const builder: RxGraphQLReplicationPullQueryBuilder<any> = (checkpoint: any, limit: number) => {\n        const query = 'query ' + operationName + '($checkpoint: ' + checkpointInputName + ', $limit: Int!) {\\n' +\n            SPACING + SPACING + queryName + '(checkpoint: $checkpoint, limit: $limit) {\\n' +\n            SPACING + SPACING + SPACING + 'documents {\\n' + \n            outputFields  + '\\n' +\n            SPACING + SPACING + SPACING + '}\\n' +\n            SPACING + SPACING + SPACING + 'checkpoint {\\n' +\n            SPACING + SPACING + SPACING + SPACING + input.checkpointFields.join('\\n' + SPACING + SPACING + SPACING + SPACING) + '\\n' +\n            SPACING + SPACING + SPACING + '}\\n' +\n            SPACING + SPACING + '}\\n' +\n            '}';\n        return {\n            query,\n            operationName,\n            variables: {\n                checkpoint,\n                limit\n            }\n        };\n    };\n\n    return builder;\n}\n\nexport function pullStreamBuilderFromRxSchema(\n    collectionName: string,\n    input: GraphQLSchemaFromRxSchemaInputSingleCollection,\n) {\n    input = fillUpOptionals(input);\n    const schema = input.schema;\n    const prefixes: Prefixes = input.prefixes as any;\n\n    const ucCollectionName = ucfirst(collectionName);\n    const queryName = prefixes.stream + ucCollectionName;\n    const outputFields = generateGQLOutputFields({ schema, ignoreOutputKeys: input.ignoreOutputKeys })\n\n    const headersName = ucCollectionName + 'Input' + prefixes.headers;\n\n    const query = 'subscription on' + ucfirst(ensureNotFalsy(prefixes.stream)) + '($headers: ' + headersName + ') {\\n' +\n        SPACING + queryName + '(headers: $headers) {\\n' +\n        SPACING + SPACING + SPACING + 'documents {\\n' +\n        outputFields  + '\\n' +\n        SPACING + SPACING + SPACING + '}\\n' +\n        SPACING + SPACING + SPACING + 'checkpoint {\\n' +\n        SPACING + SPACING + SPACING + SPACING + input.checkpointFields.join('\\n' + SPACING + SPACING + SPACING + SPACING) + '\\n' +\n        SPACING + SPACING + SPACING + '}\\n' +\n        SPACING + '}' +\n        '}';\n\n    const builder: RxGraphQLReplicationPullStreamQueryBuilder = (headers: any) => {\n        return {\n            query,\n            variables: {\n                headers\n            }\n        };\n    };\n    return builder;\n}\n\n\nexport function pushQueryBuilderFromRxSchema(\n    collectionName: string,\n    input: GraphQLSchemaFromRxSchemaInputSingleCollection\n): RxGraphQLReplicationPushQueryBuilder {\n    input = fillUpOptionals(input);\n    const prefixes: Prefixes = input.prefixes as any;\n\n    const ucCollectionName = ucfirst(collectionName);\n    const queryName = prefixes.push + ucCollectionName;\n    const operationName = ucfirst(queryName);\n\n    const variableName = collectionName + prefixes.pushRow;\n    const returnFields = generateGQLOutputFields({ schema: input.schema, spaceCount: 2 })\n    \n    const builder: RxGraphQLReplicationPushQueryBuilder = (pushRows) => {\n        const query = '' +\n            'mutation ' + operationName + '($' + variableName + ': [' + ucCollectionName + 'Input' + prefixes.pushRow + '!]) {\\n' +\n            SPACING + queryName + '(' + variableName + ': $' + variableName + ') {\\n' +\n            returnFields  + '\\n' +\n            SPACING + '}\\n' +\n            '}';\n\n        const sendRows: typeof pushRows = [];\n        function transformPushDoc(doc: WithDeleted<any>) {\n            const sendDoc: any = {};\n            Object.entries(doc).forEach(([k, v]) => {\n                if (\n                    // skip if in ignoreInputKeys list\n                    !(input.ignoreInputKeys as string[]).includes(k) &&\n                    // only use properties that are in the schema\n                    input.schema.properties[k]\n                ) {\n                    sendDoc[k] = v;\n                }\n            });\n            return sendDoc;\n        }\n        pushRows.forEach(pushRow => {\n            const newRow: typeof pushRow = {\n                newDocumentState: transformPushDoc(pushRow.newDocumentState),\n                assumedMasterState: pushRow.assumedMasterState ? transformPushDoc(pushRow.assumedMasterState) : undefined\n            };\n            sendRows.push(newRow);\n        });\n        const variables = {\n            [variableName]: sendRows\n        };\n        return {\n            query,\n            operationName,\n            variables\n        };\n    };\n\n    return builder;\n}\n\ntype GenerateGQLOutputFieldsOptions = {\n    schema: RxJsonSchema<any> | TopLevelProperty,\n    spaceCount?: number,\n    depth?: number\n    ignoreOutputKeys?: string[]\n}\n\nfunction generateGQLOutputFields(options: GenerateGQLOutputFieldsOptions) {\n    const { schema, spaceCount = 4, depth = 0, ignoreOutputKeys = [] } = options;\n\n    const outputFields: string[] = [];\n    const properties = schema.properties \n    const NESTED_SPACING = SPACING.repeat(depth);\n    const LINE_SPACING = SPACING.repeat(spaceCount);\n  \n    for (const key in properties) {\n        //only skipping top level keys that are in ignoreOutputKeys list\n        if (ignoreOutputKeys.includes(key)) {\n            continue;\n        }\n\n        const value = properties[key];\n        if (value.type === \"object\") {\n          outputFields.push(\n            LINE_SPACING + NESTED_SPACING + key + \" {\",\n            generateGQLOutputFields({ schema: value, spaceCount, depth: depth + 1 }),\n            LINE_SPACING + NESTED_SPACING + \"}\"\n          );\n        } else {\n            outputFields.push(LINE_SPACING + NESTED_SPACING + key);\n        }\n    }\n    \n    return outputFields.join('\\n');\n}\n\n\n\n"],"mappings":";;;;;;;;AAAA,IAAAA,0BAAA,GAAAC,OAAA;AAMA,IAAAC,MAAA,GAAAD,OAAA;AAUO,SAASE,4BAA4BA,CACxCC,cAAsB,EACtBC,KAAqD,EACZ;EACzCA,KAAK,GAAG,IAAAC,0CAAe,EAACD,KAAK,CAAC;EAC9B,IAAME,MAAM,GAAGF,KAAK,CAACE,MAAM;EAC3B,IAAMC,QAAkB,GAAGH,KAAK,CAACG,QAAe;EAEhD,IAAMC,gBAAgB,GAAG,IAAAC,cAAO,EAACN,cAAc,CAAC;EAChD,IAAMO,SAAS,GAAGH,QAAQ,CAACI,IAAI,GAAGH,gBAAgB;EAClD,IAAMI,aAAa,GAAG,IAAAH,cAAO,EAACC,SAAS,CAAC;EAExC,IAAMG,YAAY,GAAGC,uBAAuB,CAAC;IAAER,MAAM;IAAES,gBAAgB,EAAEX,KAAK,CAACW;EAAiB,CAAC,CAAC;EAClG;;EAEA,IAAMC,mBAAmB,GAAGR,gBAAgB,GAAG,OAAO,GAAGD,QAAQ,CAACU,UAAU;EAC5E,IAAMC,OAAkD,GAAGA,CAACD,UAAe,EAAEE,KAAa,KAAK;IAC3F,IAAMC,KAAK,GAAG,QAAQ,GAAGR,aAAa,GAAG,gBAAgB,GAAGI,mBAAmB,GAAG,qBAAqB,GACnGK,kCAAO,GAAGA,kCAAO,GAAGX,SAAS,GAAG,8CAA8C,GAC9EW,kCAAO,GAAGA,kCAAO,GAAGA,kCAAO,GAAG,eAAe,GAC7CR,YAAY,GAAI,IAAI,GACpBQ,kCAAO,GAAGA,kCAAO,GAAGA,kCAAO,GAAG,KAAK,GACnCA,kCAAO,GAAGA,kCAAO,GAAGA,kCAAO,GAAG,gBAAgB,GAC9CA,kCAAO,GAAGA,kCAAO,GAAGA,kCAAO,GAAGA,kCAAO,GAAGjB,KAAK,CAACkB,gBAAgB,CAACC,IAAI,CAAC,IAAI,GAAGF,kCAAO,GAAGA,kCAAO,GAAGA,kCAAO,GAAGA,kCAAO,CAAC,GAAG,IAAI,GACxHA,kCAAO,GAAGA,kCAAO,GAAGA,kCAAO,GAAG,KAAK,GACnCA,kCAAO,GAAGA,kCAAO,GAAG,KAAK,GACzB,GAAG;IACP,OAAO;MACHD,KAAK;MACLR,aAAa;MACbY,SAAS,EAAE;QACPP,UAAU;QACVE;MACJ;IACJ,CAAC;EACL,CAAC;EAED,OAAOD,OAAO;AAClB;AAEO,SAASO,6BAA6BA,CACzCtB,cAAsB,EACtBC,KAAqD,EACvD;EACEA,KAAK,GAAG,IAAAC,0CAAe,EAACD,KAAK,CAAC;EAC9B,IAAME,MAAM,GAAGF,KAAK,CAACE,MAAM;EAC3B,IAAMC,QAAkB,GAAGH,KAAK,CAACG,QAAe;EAEhD,IAAMC,gBAAgB,GAAG,IAAAC,cAAO,EAACN,cAAc,CAAC;EAChD,IAAMO,SAAS,GAAGH,QAAQ,CAACmB,MAAM,GAAGlB,gBAAgB;EACpD,IAAMK,YAAY,GAAGC,uBAAuB,CAAC;IAAER,MAAM;IAAES,gBAAgB,EAAEX,KAAK,CAACW;EAAiB,CAAC,CAAC;EAElG,IAAMY,WAAW,GAAGnB,gBAAgB,GAAG,OAAO,GAAGD,QAAQ,CAACqB,OAAO;EAEjE,IAAMR,KAAK,GAAG,iBAAiB,GAAG,IAAAX,cAAO,EAAC,IAAAoB,qBAAc,EAACtB,QAAQ,CAACmB,MAAM,CAAC,CAAC,GAAG,aAAa,GAAGC,WAAW,GAAG,OAAO,GAC9GN,kCAAO,GAAGX,SAAS,GAAG,yBAAyB,GAC/CW,kCAAO,GAAGA,kCAAO,GAAGA,kCAAO,GAAG,eAAe,GAC7CR,YAAY,GAAI,IAAI,GACpBQ,kCAAO,GAAGA,kCAAO,GAAGA,kCAAO,GAAG,KAAK,GACnCA,kCAAO,GAAGA,kCAAO,GAAGA,kCAAO,GAAG,gBAAgB,GAC9CA,kCAAO,GAAGA,kCAAO,GAAGA,kCAAO,GAAGA,kCAAO,GAAGjB,KAAK,CAACkB,gBAAgB,CAACC,IAAI,CAAC,IAAI,GAAGF,kCAAO,GAAGA,kCAAO,GAAGA,kCAAO,GAAGA,kCAAO,CAAC,GAAG,IAAI,GACxHA,kCAAO,GAAGA,kCAAO,GAAGA,kCAAO,GAAG,KAAK,GACnCA,kCAAO,GAAG,GAAG,GACb,GAAG;EAEP,IAAMH,OAAmD,GAAIU,OAAY,IAAK;IAC1E,OAAO;MACHR,KAAK;MACLI,SAAS,EAAE;QACPI;MACJ;IACJ,CAAC;EACL,CAAC;EACD,OAAOV,OAAO;AAClB;AAGO,SAASY,4BAA4BA,CACxC3B,cAAsB,EACtBC,KAAqD,EACjB;EACpCA,KAAK,GAAG,IAAAC,0CAAe,EAACD,KAAK,CAAC;EAC9B,IAAMG,QAAkB,GAAGH,KAAK,CAACG,QAAe;EAEhD,IAAMC,gBAAgB,GAAG,IAAAC,cAAO,EAACN,cAAc,CAAC;EAChD,IAAMO,SAAS,GAAGH,QAAQ,CAACwB,IAAI,GAAGvB,gBAAgB;EAClD,IAAMI,aAAa,GAAG,IAAAH,cAAO,EAACC,SAAS,CAAC;EAExC,IAAMsB,YAAY,GAAG7B,cAAc,GAAGI,QAAQ,CAAC0B,OAAO;EACtD,IAAMC,YAAY,GAAGpB,uBAAuB,CAAC;IAAER,MAAM,EAAEF,KAAK,CAACE,MAAM;IAAE6B,UAAU,EAAE;EAAE,CAAC,CAAC;EAErF,IAAMjB,OAA6C,GAAIkB,QAAQ,IAAK;IAChE,IAAMhB,KAAK,GAAG,EAAE,GACZ,WAAW,GAAGR,aAAa,GAAG,IAAI,GAAGoB,YAAY,GAAG,KAAK,GAAGxB,gBAAgB,GAAG,OAAO,GAAGD,QAAQ,CAAC0B,OAAO,GAAG,SAAS,GACrHZ,kCAAO,GAAGX,SAAS,GAAG,GAAG,GAAGsB,YAAY,GAAG,KAAK,GAAGA,YAAY,GAAG,OAAO,GACzEE,YAAY,GAAI,IAAI,GACpBb,kCAAO,GAAG,KAAK,GACf,GAAG;IAEP,IAAMgB,QAAyB,GAAG,EAAE;IACpC,SAASC,gBAAgBA,CAACC,GAAqB,EAAE;MAC7C,IAAMC,OAAY,GAAG,CAAC,CAAC;MACvBC,MAAM,CAACC,OAAO,CAACH,GAAG,CAAC,CAACI,OAAO,CAAC,CAAC,CAACC,CAAC,EAAEC,CAAC,CAAC,KAAK;QACpC;QACI;QACA,CAAEzC,KAAK,CAAC0C,eAAe,CAAcC,QAAQ,CAACH,CAAC,CAAC;QAChD;QACAxC,KAAK,CAACE,MAAM,CAAC0C,UAAU,CAACJ,CAAC,CAAC,EAC5B;UACEJ,OAAO,CAACI,CAAC,CAAC,GAAGC,CAAC;QAClB;MACJ,CAAC,CAAC;MACF,OAAOL,OAAO;IAClB;IACAJ,QAAQ,CAACO,OAAO,CAACV,OAAO,IAAI;MACxB,IAAMgB,MAAsB,GAAG;QAC3BC,gBAAgB,EAAEZ,gBAAgB,CAACL,OAAO,CAACiB,gBAAgB,CAAC;QAC5DC,kBAAkB,EAAElB,OAAO,CAACkB,kBAAkB,GAAGb,gBAAgB,CAACL,OAAO,CAACkB,kBAAkB,CAAC,GAAGC;MACpG,CAAC;MACDf,QAAQ,CAACN,IAAI,CAACkB,MAAM,CAAC;IACzB,CAAC,CAAC;IACF,IAAMzB,SAAS,GAAG;MACd,CAACQ,YAAY,GAAGK;IACpB,CAAC;IACD,OAAO;MACHjB,KAAK;MACLR,aAAa;MACbY;IACJ,CAAC;EACL,CAAC;EAED,OAAON,OAAO;AAClB;AASA,SAASJ,uBAAuBA,CAACuC,OAAuC,EAAE;EACtE,IAAM;IAAE/C,MAAM;IAAE6B,UAAU,GAAG,CAAC;IAAEmB,KAAK,GAAG,CAAC;IAAEvC,gBAAgB,GAAG;EAAG,CAAC,GAAGsC,OAAO;EAE5E,IAAMxC,YAAsB,GAAG,EAAE;EACjC,IAAMmC,UAAU,GAAG1C,MAAM,CAAC0C,UAAU;EACpC,IAAMO,cAAc,GAAGlC,kCAAO,CAACmC,MAAM,CAACF,KAAK,CAAC;EAC5C,IAAMG,YAAY,GAAGpC,kCAAO,CAACmC,MAAM,CAACrB,UAAU,CAAC;EAE/C,KAAK,IAAMuB,GAAG,IAAIV,UAAU,EAAE;IAC1B;IACA,IAAIjC,gBAAgB,CAACgC,QAAQ,CAACW,GAAG,CAAC,EAAE;MAChC;IACJ;IAEA,IAAMC,KAAK,GAAGX,UAAU,CAACU,GAAG,CAAC;IAC7B,IAAIC,KAAK,CAACC,IAAI,KAAK,QAAQ,EAAE;MAC3B/C,YAAY,CAACkB,IAAI,CACf0B,YAAY,GAAGF,cAAc,GAAGG,GAAG,GAAG,IAAI,EAC1C5C,uBAAuB,CAAC;QAAER,MAAM,EAAEqD,KAAK;QAAExB,UAAU;QAAEmB,KAAK,EAAEA,KAAK,GAAG;MAAE,CAAC,CAAC,EACxEG,YAAY,GAAGF,cAAc,GAAG,GAClC,CAAC;IACH,CAAC,MAAM;MACH1C,YAAY,CAACkB,IAAI,CAAC0B,YAAY,GAAGF,cAAc,GAAGG,GAAG,CAAC;IAC1D;EACJ;EAEA,OAAO7C,YAAY,CAACU,IAAI,CAAC,IAAI,CAAC;AAClC","ignoreList":[]}